# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Pypline

on:
  push:
    branches: [ "main", "lab5branch"]
  pull_request:
    branches: [ "main", "lab5branch"] 

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11.7"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test
      run: |
        python Lab5/tests.py
    - name: Docker
      run: |
        pwd; dir; docker build -t lab5/app_docker_image ./Lab5
        echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.USERNAME }}" --password-stdin
        echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
        # docker pull lab5/app_docker_image
        docker run --name app_docker javaconterry/app_docker_image
    - name: Test with docker
      run: |
        docker run lab5/app_docker_image python -m unittest Lab5/tests.py
